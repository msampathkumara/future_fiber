import 'package:dio/dio.dart';
import 'package:smartwind/C/Api.dart';
class ServerApi {
  /// auto generated by smartwind server project
  /// 2022-09-23 21:48:09.516Z

  static Future<Response> admin_settings_getSettings(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/settings/getSettings";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_settings_setSetting(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/settings/setSetting";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_reloadTicketDB(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/reloadTicketDB";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_reloadInMemoryDB(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/reloadInMemoryDB";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_cleanReloadDevices(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/cleanReloadDevices";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_updateStandard(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/updateStandard";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_updateNowAt(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/updateNowAt";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_doneKitting(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/doneKitting";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_checkFile(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/checkFile";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_updateUsers(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/updateUsers";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_updateStandardLibUsage(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/updateStandardLibUsage";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_updateProgress(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/updateProgress";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> admin_convertTickets(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "admin/convertTickets";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_saveSailAverageTime(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/saveSailAverageTime";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_getSailAverageTime(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/getSailAverageTime";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_getDefaultEmployeeCount(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/getDefaultEmployeeCount";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_saveDefaultEmployeeCount(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/saveDefaultEmployeeCount";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_getShiftSectionEmployeeCount(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/getShiftSectionEmployeeCount";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_saveShiftSectionEmployeeCount(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/saveShiftSectionEmployeeCount";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_getDefaultShifts(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/getDefaultShifts";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_saveDefaultShifts(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/saveDefaultShifts";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_getShiftsByDate(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/getShiftsByDate";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_settings_saveShifts(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/settings/saveShifts";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_getShift(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/getShift";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_saveShifts(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/saveShifts";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_getGraphData(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/getGraphData";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> dashboard_x(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "dashboard/x";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> data_getData(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "data/getData";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tabs_rename(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tabs/rename";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tabs_logout(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tabs/logout";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tabs_check(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tabs/check";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tabs_tabList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tabs/tabList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tabs_logList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tabs/logList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_upload(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/upload";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_getTicketQcList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/getTicketQcList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_getList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_qcImageList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/qcImageList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_qcImageView(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/qcImageView";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_qcImage(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/qcImage";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_saveStatus(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/saveStatus";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_qc_uploadEdits(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/qc/uploadEdits";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_uploadEdits(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/uploadEdits";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_getPdf(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/getPdf";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_getPdf_d(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/getPdf/d";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_getInfo(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/getInfo";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_getList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_getListByUptime(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/getListByUptime";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_checkForDuplicate(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/checkForDuplicate";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_upload(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/upload";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_delete(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/delete";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_standard_changeFactory(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/standard/changeFactory";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_flags_getList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/flags/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_flags_setFlag(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/flags/setFlag";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_flags_removeFlag(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/flags/removeFlag";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_completed_getList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/completed/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_finish(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/finish";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_finish_getMaxMinOpNo(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/finish/getMaxMinOpNo";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_finish_getProgress(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/finish/getProgress";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_finish_erpFinish(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/finish/erpFinish";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_finish_pendingToFinishList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/finish/pendingToFinishList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_print(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/print";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_print_getList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/print/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_print_getHistoryList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/print/getHistoryList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_downloadTicket(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/downloadTicket";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_uploadEdits(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/uploadEdits";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getTicketFile(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getTicketFile";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_comments_list(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/comments/list";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_comments_save(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/comments/save";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getTickets(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getTickets";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getProductionPoolTickets(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getProductionPoolTickets";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getPdf(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getPdf";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_search(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/search";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_info_getTicketInfo(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/info/getTicketInfo";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_updateFiles(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/updateFiles";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_deletePDF(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/deletePDF";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getDeletedTickets(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getDeletedTickets";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_rename(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/rename";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_start(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/start";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tickets_getTicketProgress(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tickets/getTicketProgress";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> sheet_upload(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "sheet/upload";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> sheet_getSheetData(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "sheet/getSheetData";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_getOTP(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/getOTP";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_getUsers(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/getUsers";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_saveRfCredentials(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/saveRfCredentials";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_getRfCredentials(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/getRfCredentials";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_getUser(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/getUser";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_userImages_size_image(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/userImages/size/:image";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_setNfcCard(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/setNfcCard";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_removeNfcCard(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/removeNfcCard";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_deactivate(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/deactivate";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_unlock(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/unlock";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_saveImage(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/saveImage";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_checkDuplicate(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/checkDuplicate";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> users_saveUser(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "users/saveUser";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_recoverPassword_sendOTP(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/recoverPassword/sendOTP";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_recoverPassword_getUserByNic(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/recoverPassword/getUserByNic";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_recoverPassword_validateOtp(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/recoverPassword/validateOtp";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_recoverPassword_savePassword(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/recoverPassword/savePassword";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_recoverPassword_sendOTPToAdmin(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/recoverPassword/sendOTPToAdmin";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_login(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/login";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_getUserData(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/getUserData";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_setUserSection(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/setUserSection";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_loginWithCookie(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/loginWithCookie";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> user_loginWithCred(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "user/loginWithCred";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> sections_getList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "sections/getList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_sendCpr(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/sendCpr";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_delete(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/delete";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_search(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/search";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_checkItem(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/checkItem";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_getCpr(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/getCpr";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_getSails(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/getSails";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_checkSailIsStanded(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/checkSailIsStanded";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_getMaterilas(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/getMaterilas";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_getAllMaterials(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/getAllMaterials";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_order(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/order";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_saveCpr(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/saveCpr";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_cpr_getExcel(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/cpr/getExcel";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_search(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/search";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_getKit(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/getKit";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_saveKitMaterials(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/saveKitMaterials";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_checkItem(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/checkItem";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_readyKit(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/readyKit";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_order(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/order";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_updateClient(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/updateClient";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_sendKits(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/sendKits";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_sendKit(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/sendKit";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_kit_getExcel(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/kit/getExcel";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_saveCprComment(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/saveCprComment";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> materialManagement_getCprComments(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "materialManagement/getCprComments";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> permissions_permissionsList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "permissions/permissionsList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> permissions_profilesList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "permissions/profilesList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> permissions_userPermissions(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "permissions/userPermissions";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> permissions_userPermissionsList(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "permissions/userPermissionsList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> permissions_saveUserPermissions(Map<String, dynamic> data,
      {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "permissions/saveUserPermissions";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> FileUpload_upload(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "FileUpload/upload";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tab_rename(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tab/rename";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tab_logout(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tab/logout";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tab_check(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tab/check";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tab_tabList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tab/tabList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> tab_logList(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "tab/logList";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> ping(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "ping";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> test(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "test";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> downloadTicket(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "downloadTicket";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> compress(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "compress";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }

  static Future<Response> xx(Map<String, dynamic> data, {FormData? formData, Null Function(int sent, int total)? onSendProgress, bool reFreshToken = false}) {
    String url = "xx";

    return Api.post(url, data, formData: formData, onSendProgress: onSendProgress, reFreshToken: reFreshToken);
  }
}